Σχολιασμός για άσκηση 2 (RankSort2)

	Όταν το μέγεθος είναι μικρό (1000) τότε με την αύξηση των επεξεργαστών βλέπουμε ότι ο χρόνος εκτέλεσης του προγράμματος μεγαλώνει. Αυτό συμβαίνει διότι για προβλήματα μικρής εμβέλειας και μεγέθους ο χρόνος για συγχρονισμό νημάτων λειτουργεί εις βάρος του χρόνου εκτέλεσης και όχι θετικά όπως θα περιμέναμε. Το overhead σε αυτήν την περίπτωση είναι πολύ μεγάλο.
	Αντίθετα όταν αυξήσουμε το μέγεθος του προβλήματος (10000) βλέπουμε ότι με την αύξηση των επεξεργαστών ο χρόνος εκτέλεσης μειώνεται με σταθερό ρυθμό εκτός από την μετάβαση από τους 8 στους 16 πυρήνες που εκεί το overhead ξεπερνάει τον χρόνο που κερδίζουμε από τον παραλληλισμό.
	Τέλος, όταν το μέγεθος του προβλήματος είναι πολύ μεγάλο (100000), με τον διπλασιασμό των πυρήνων βλέπουμε πως υπάρχει και υποδιπλασιασμός στον χρόνο εκτέλεσης του προγράμματος για κάθε περίπτωση. Είναι μια ιδανική περίπτωση παραλληλισμού με μηδαμινό overhead.

	Για τον υπολογισμό του Speed Up εφαρμόστηκε ο τύπος Ακολουθιακός Χρόνος/Παράλληλος Χρόνος. Ακολουθιακός είναι ο χρόνος του προγράμματος χωρίς την χρήση νημάτων. Θεωρήθηκε πως πρόγραμμα με ένα νήμα ανήκει στην κατηγορία των παράλληλων προγραμμάτων. Όπως συμβαίνει και με τους χρόνους εκτέλεσης το Speed Up στις περιπτώσεις όπου το overhead είναι μεγάλο (Ν = 1000) μειώνεται σταδικά με την μείωση των νημάτων, ενώ όταν το overhead είναι αμελητέο (Ν = 10000 και Ν = 100000) η επιτάχυνση αυξάνεται. Στην περίπτωση που το μέγεθός προβλήματος είναι πολύ μεγάλο, η επιτάχυνση αυξάνεται με τον ρυθμό αύξησης των νημάτων και μιλάμε για ιδανική περίπτωση.

	Ο υπολογισμός του Scale Up δεν έγινε λόγο προβλήματος στον κώδικα. Ο κώδικας παρατίθεται μαζί με τα άλλα αρχεία αλλά δεν δουλεύει. Η ιδέα για να υπολογισθεί ήταν, στο ακολουθιακό πρόγραμμα, να το τρέξω για τόσα δευτερόλεπτα όσα έτρεξε το παράλληλο και να δω μέχρι τι μέγεθος προβλήματος πρόλαβε να υπολογίσει. Μετά με μια διαίρεση του όγκου των δεδομένων που επεξεργάστηκε το παράλληλο πρόγραμμα προς τον όγκο που επεξεργάστηκε το ακολουθιακό θα υπολογιζόταν το scale up.

	Υπολογισμός για overhead θα μπορούσε να γίνει υπολογίζοντας τον χρόνο για κάθε for loop, συγχρονισμό νημάτων, αρχικοποίηση πινάκων κτλ του προγράμματος και μετά αφαίρεση από τον συνολικό χρόνο εκτέλεσης.
